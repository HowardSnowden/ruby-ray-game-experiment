exit
@animations[:left].running?
continue
@animations[:left].running?
@animations[:left].running
@animations[:left].resume
@animations[:left].paused?
@animations[:left]
@animations
continue
exit
continue
exit
continue
@map_music.looping = true
@map_music.looping
@map_music.duration
@map_music.methods
@map_music
exit
tiles[[x, y]]
tiles
t
exit
next
layer
layer.first
layer
layer.uniq
layer
next
line
y
line.count
line
continue
@layers[0]
@layers[1]
@layers[0].first
@layers[0].count
@layers[0]
@layers[1].count
@layers[1]
@layers.count
@layers
l
exit
continue
l[[x, y]].pos.to_a
l[[x, y]].pos
l[[x, y]]
exit
l[]
l.to_a
l.to_
l
x
y
exit
l.to_a
l
l[49, 49]
l.first[0]
l.first[1]
l.first
l.keys.first
l.keys.count
l.keys
l.to_a
l.to_a.first
l.to_a
l.to_a[49, 49]
l.to_a[49 49]
l.to_a[49]
l.to_a
l.to_a.first
l.to_a.count
l.to_a
l.to_a[0].count
l.to_a[0]
l.to_a.count
l.to_a
l.to_a[vx, cx].count
l.to_a[vx, cx]
l.to_a.count
l.to_a
l
l.first
l
quit
val.x <= cx + vx
cx + vx
cx + vs
val.x
val.x >= cx + vx
val.y
val.x
val
k
val.pos.to_a
val.size
val.pos
val
quit
continue
l
l.firast
l
v
k
exit
p.count / 
p.count
p
quit
:q
camera_tiles[1]
k[1]
d
camera_tiles[1].to_i
u
camera_tiles[1].to_i
camera_tiles[1]
viewport[1]
u
d
exit
offset_right = 80 + 49.5
offset_left = 80 - 49.5
(camera_tiles[0]..viewport[0]).cover?(0)
camera_tiles[0]..viewport[0].cover?(0)
camera_tiles[0]..viewport[0] 
camera_tiles[0] 
camera_tiles[0]k[0]
k[0]
k
quit
k
k[0]
viewport[0] - camera_tiles[0]
viewport[0]
l.keys[3]
l.keys[2]
l.keys[1]
l.keys.second
l.keys.first.second
l.keys.first
l.keys
l.keys.count / 100
l.keys / 100
l.first
l.keys.count
l.keys
l
l.rows
l.first
l.count
l.size
l
quit
k
k * 8
k
nk
next
next k
k
next
k
next
k
next
k
next
k
next
k
next
k
next
k
next
nex
viewport[1] - camera_tiles[1]
viewport[1]
k[1]
viewport[0] - camera_tiles[0]
viewport[0]
k
quit
84 * 8
480 - 396
640 - 396
k.size
k
camera.size
k
camera.size.to_a
camera.size
camera.x
camera
k[0]
k
v
k
quit
y
quit
continue
exit
continue
exit
(@camera.y - 640).abs >  tile.y
(@camera.y - 640).abs < tile.y
(@camera.y - 640) < tile.y
(@camera.y - 640) , tile.y
(@camera.y - 640) > tile.y
(@camera.y - 640)
(@camera.x - 640)
@camera.x - 640
@camera.x - tile.x
@camera.x
camera.x
tile.y * 8
tile.y
tile.x
tile.pos
tile
exit
window
continue
window.size
window
(640 - 396)
640 - 396
480 - 396
@layers.first.select{|k, v| k  } 
480 - 396
640 - 396
@layers.first[[49, 49]]
y / 8
x / 8
y
x
@layers.first[[88,99]]
@layers.first.keys
@layers.first[[88,99]]
@layers.first.keys
@layers.first[0]
@layers.first
@layers.first.tiles
@layers.first
@layers.count
@layers
@tiles
y
