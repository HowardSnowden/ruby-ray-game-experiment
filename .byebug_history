exit
continue
exit
continue
c
continue
c
continue
t
continue
t
continue
next
@tiles[[x, y]]
@tiles
n
@tileset_grid[4]
@tileset_grid[4[
@tileset_grid
t
coord_x
coord_y
coord y
n
nn
n
nn
n
t
n
nn
n
next
@tileset_grid.keys
@tileset_grid
@grid
@grid.keys
@tmx.layers[1].data.uniq
@tmx.layers[1].uniq
@tmx.layers[1].keys
@tmx.layers[1]
coord_y
coord_x
@tmx.layers.first.data.uniq
@tmx.layers.first.data.count
@tmx.layers.first.data.keys
@tmx.layers.first.data
@tmx.layers.first
@tmx
@tileset
@tileset.layers.first.data
@tilset.layers.first.data
@tileset_grid.keys.count
@tileset_grid.keys
@tileset_grid
t
exit
coord_x
coord_y
exit
40 * 8 + 8
40 * 8
40 % 32
48 % 32
16 * 32
128 / 8 
@tileset.imagewidth / 8  * 4
@tileset.imagewidth / 8 
@tileset.imagewidth
@tileset
@tmx.tilesets
@tmx
@tileset_img.width
@tileset_img
exit
continue
y
line
exit
:q
continue
@tmx.layers.first.data.each_slice(100) {|v, x| puts x}
@tmx.layers.first.data.each_slice(100) {|v| puts v}
@tmx.layers.first.data.each_slice(100).first
@tmx.layers.first.data.each_slice(100)
@tmx.layers.first.data
@tmx.layers
line
y
line
continue
@tmx.width
@tmx.tilewidth
@tmx.contents
@tmx.methods
@tmx
@tmx.layers.first.each_slice(100) {|m| puts m}
@tmx.layers.first.each_slice(100)
@tmx.layers.first.data.count
@tmx.layers.data.first
@tmx.layers.first
@tmx
@tmx.layers.count
@tmx.layers
@tmx
@tileset
continue
@tileset_img
continue
@tmx.tilesets.count
@tmx.tilesets
@tmx.tileset
@tmx
continue
t.layers[1].data.uniq
t.layers.first.data.uniq
t.layers.first
t.layers.data.first
t.layers.data.count
t.layers.data.uniq
t.layers
t.tilesets
t
t.contents
t.methods
t
100 * 100
100 x 100
t.layers.first.data.count
t.layers.first.data
t.objects
t.layers[0]
t.layers[1]
t.layers.second
t.layers.first
t.layers.first.data.first
t.layers.first.data
t.layers.first
t.layers
t.tilesets
t = Tmx.load('./rpg/tiles/main_map.tmx')
continue
t.objects.last
t.objects.first
t.objects
t.layers
t.methods
t.tile_layers
t.tilesets
t
tilesets
t
t.keys
t = Tmx.load('./rpg/tiles/main_map.tmx')
continue
t.layers.first
t.layers.first.first
t.layers.first.last
t.layers.first
t.layers.count
t.layers
t.image_layers
t = Tmx.load('./rpg/tiles/main_map.tmx')
t.image_layers
t = Tmx.load('./rpg/tiles/main_map2.tmx')
continue
f
t.parse(f)
f = File.open('./rpg/tiles/main_map2.tmx')
t.parse(File.open './rpg/tiles/main_map2.tmx')
t.parse('./rpg/tiles/main_map2.tmx')
t.parse('rpg/tiles/main_map2.tmx')
t = Tmx::Parser::Tmx.new('s')
t = _
Tmx::Parser::Tmx.new('s')
Tmx::Parser::Tmx.new
Tmx::Parser
Tmx
Tnx
continue
Tmx
TMX
